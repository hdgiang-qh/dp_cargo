///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
class UpdateTrackingSale {
/*
{
  "id": 590,
  "username": null,
  "email": "dpcargo161@gmail.com",
  "phone": "0123456789",
  "fullname": "Dương Phan",
  "avatarUrl": null
}
*/

  int? id;
  String? username;
  String? email;
  String? phone;
  String? fullname;
  String? avatarUrl;

  UpdateTrackingSale({
    this.id,
    this.username,
    this.email,
    this.phone,
    this.fullname,
    this.avatarUrl,
  });
  UpdateTrackingSale.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toInt();
    username = json['username']?.toString();
    email = json['email']?.toString();
    phone = json['phone']?.toString();
    fullname = json['fullname']?.toString();
    avatarUrl = json['avatarUrl']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['username'] = username;
    data['email'] = email;
    data['phone'] = phone;
    data['fullname'] = fullname;
    data['avatarUrl'] = avatarUrl;
    return data;
  }
}

class UpdateTrackingExploitedBy {
/*
{
  "id": 976,
  "username": null,
  "email": "thuannguyen@gmail.com",
  "phone": "0787425034",
  "fullname": "Thuận Nguyễn"
}
*/

  int? id;
  String? username;
  String? email;
  String? phone;
  String? fullname;

  UpdateTrackingExploitedBy({
    this.id,
    this.username,
    this.email,
    this.phone,
    this.fullname,
  });
  UpdateTrackingExploitedBy.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toInt();
    username = json['username']?.toString();
    email = json['email']?.toString();
    phone = json['phone']?.toString();
    fullname = json['fullname']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['username'] = username;
    data['email'] = email;
    data['phone'] = phone;
    data['fullname'] = fullname;
    return data;
  }
}

class UpdateTrackingWarehouseVn {
/*
{
  "id": 1,
  "name": "DP-HCM"
}
*/

  int? id;
  String? name;

  UpdateTrackingWarehouseVn({
    this.id,
    this.name,
  });
  UpdateTrackingWarehouseVn.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toInt();
    name = json['name']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['name'] = name;
    return data;
  }
}

class UpdateTrackingDeliveryBill {
/*
{
  "id": 10117,
  "code": "DPOP12062400003",
  "createdAt": "2024-06-12T02:27:21.362Z"
}
*/

  int? id;
  String? code;
  String? createdAt;

  UpdateTrackingDeliveryBill({
    this.id,
    this.code,
    this.createdAt,
  });
  UpdateTrackingDeliveryBill.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toInt();
    code = json['code']?.toString();
    createdAt = json['createdAt']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['code'] = code;
    data['createdAt'] = createdAt;
    return data;
  }
}

class UpdateTrackingCustomerUser {
/*
{
  "id": 660,
  "username": null,
  "email": "nttp251189@gmail.com",
  "password": "$2b$10$qeYcIZowox56swb0btHKK.U1/5A15mj5dG4BIu8M9M78uFoC7DNAi",
  "type": "customer",
  "confirmed": true,
  "blocked": false,
  "phone": "919703125",
  "fullname": "Nguyễn Thanh ",
  "createdById": null,
  "resetPasswordToken": null,
  "avatarUrl": null,
  "provider": null,
  "confirmationToken": null,
  "confirmPassword": null,
  "tmpPassword": null,
  "createdAt": "2024-03-08T02:10:00.506Z",
  "updatedAt": "2024-03-08T02:10:00.506Z",
  "updatedById": null,
  "code": null
}
*/

  int? id;
  String? username;
  String? email;
  String? password;
  String? type;
  bool? confirmed;
  bool? blocked;
  String? phone;
  String? fullname;
  String? createdById;
  String? resetPasswordToken;
  String? avatarUrl;
  String? provider;
  String? confirmationToken;
  String? confirmPassword;
  String? tmpPassword;
  String? createdAt;
  String? updatedAt;
  String? updatedById;
  String? code;

  UpdateTrackingCustomerUser({
    this.id,
    this.username,
    this.email,
    this.password,
    this.type,
    this.confirmed,
    this.blocked,
    this.phone,
    this.fullname,
    this.createdById,
    this.resetPasswordToken,
    this.avatarUrl,
    this.provider,
    this.confirmationToken,
    this.confirmPassword,
    this.tmpPassword,
    this.createdAt,
    this.updatedAt,
    this.updatedById,
    this.code,
  });
  UpdateTrackingCustomerUser.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toInt();
    username = json['username']?.toString();
    email = json['email']?.toString();
    password = json['password']?.toString();
    type = json['type']?.toString();
    confirmed = json['confirmed'];
    blocked = json['blocked'];
    phone = json['phone']?.toString();
    fullname = json['fullname']?.toString();
    createdById = json['createdById']?.toString();
    resetPasswordToken = json['resetPasswordToken']?.toString();
    avatarUrl = json['avatarUrl']?.toString();
    provider = json['provider']?.toString();
    confirmationToken = json['confirmationToken']?.toString();
    confirmPassword = json['confirmPassword']?.toString();
    tmpPassword = json['tmpPassword']?.toString();
    createdAt = json['createdAt']?.toString();
    updatedAt = json['updatedAt']?.toString();
    updatedById = json['updatedById']?.toString();
    code = json['code']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['username'] = username;
    data['email'] = email;
    data['password'] = password;
    data['type'] = type;
    data['confirmed'] = confirmed;
    data['blocked'] = blocked;
    data['phone'] = phone;
    data['fullname'] = fullname;
    data['createdById'] = createdById;
    data['resetPasswordToken'] = resetPasswordToken;
    data['avatarUrl'] = avatarUrl;
    data['provider'] = provider;
    data['confirmationToken'] = confirmationToken;
    data['confirmPassword'] = confirmPassword;
    data['tmpPassword'] = tmpPassword;
    data['createdAt'] = createdAt;
    data['updatedAt'] = updatedAt;
    data['updatedById'] = updatedById;
    data['code'] = code;
    return data;
  }
}

class UpdateTrackingCustomer {
/*
{
  "id": 594,
  "name": "Nguyễn Thanh ",
  "phone": "919703125",
  "address": "39 Xã Phú Lập, Huyện Tân Phú, Tỉnh Đồng Nai, Xã Phú Lập, Huyện Tân Phú, Tỉnh Đồng Nai Khách tự đến lấy",
  "email": "nttp251189@gmail.com",
  "nickName": "",
  "user": [
    {
      "id": 660,
      "username": null,
      "email": "nttp251189@gmail.com",
      "password": "$2b$10$qeYcIZowox56swb0btHKK.U1/5A15mj5dG4BIu8M9M78uFoC7DNAi",
      "type": "customer",
      "confirmed": true,
      "blocked": false,
      "phone": "919703125",
      "fullname": "Nguyễn Thanh ",
      "createdById": null,
      "resetPasswordToken": null,
      "avatarUrl": null,
      "provider": null,
      "confirmationToken": null,
      "confirmPassword": null,
      "tmpPassword": null,
      "createdAt": "2024-03-08T02:10:00.506Z",
      "updatedAt": "2024-03-08T02:10:00.506Z",
      "updatedById": null,
      "code": null
    }
  ],
  "shippingCost": 3,
  "idCustomer": "DPHCM TLPLA THANHNGUYEN",
  "isSubcribeToEmailNotification": true,
  "isSubcribeToFcmNotification": true
}
*/

  int? id;
  String? name;
  String? phone;
  String? address;
  String? email;
  String? nickName;
  List<UpdateTrackingCustomerUser?>? user;
  int? shippingCost;
  String? idCustomer;
  bool? isSubcribeToEmailNotification;
  bool? isSubcribeToFcmNotification;

  UpdateTrackingCustomer({
    this.id,
    this.name,
    this.phone,
    this.address,
    this.email,
    this.nickName,
    this.user,
    this.shippingCost,
    this.idCustomer,
    this.isSubcribeToEmailNotification,
    this.isSubcribeToFcmNotification,
  });
  UpdateTrackingCustomer.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toInt();
    name = json['name']?.toString();
    phone = json['phone']?.toString();
    address = json['address']?.toString();
    email = json['email']?.toString();
    nickName = json['nickName']?.toString();
    if (json['user'] != null) {
      final v = json['user'];
      final arr0 = <UpdateTrackingCustomerUser>[];
      v.forEach((v) {
        arr0.add(UpdateTrackingCustomerUser.fromJson(v));
      });
      user = arr0;
    }
    shippingCost = json['shippingCost']?.toInt();
    idCustomer = json['idCustomer']?.toString();
    isSubcribeToEmailNotification = json['isSubcribeToEmailNotification'];
    isSubcribeToFcmNotification = json['isSubcribeToFcmNotification'];
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['name'] = name;
    data['phone'] = phone;
    data['address'] = address;
    data['email'] = email;
    data['nickName'] = nickName;
    if (user != null) {
      final v = user;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['user'] = arr0;
    }
    data['shippingCost'] = shippingCost;
    data['idCustomer'] = idCustomer;
    data['isSubcribeToEmailNotification'] = isSubcribeToEmailNotification;
    data['isSubcribeToFcmNotification'] = isSubcribeToFcmNotification;
    return data;
  }
}

class UpdateTrackingWarehouse {
/*
{
  "id": 1,
  "name": "Kho US - 01"
}
*/

  int? id;
  String? name;

  UpdateTrackingWarehouse({
    this.id,
    this.name,
  });
  UpdateTrackingWarehouse.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toInt();
    name = json['name']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['name'] = name;
    return data;
  }
}

class UpdateTrackingAwb {
/*
{
  "id": 4182,
  "code": "HCM253 / DP-HCM-1"
}
*/

  int? id;
  String? code;

  UpdateTrackingAwb({
    this.id,
    this.code,
  });
  UpdateTrackingAwb.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toInt();
    code = json['code']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['code'] = code;
    return data;
  }
}

class UpdateTrackingBox {
/*
{
  "id": 518,
  "code": "DP-HCM-BOX-2"
}
*/

  int? id;
  String? code;

  UpdateTrackingBox({
    this.id,
    this.code,
  });
  UpdateTrackingBox.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toInt();
    code = json['code']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['code'] = code;
    return data;
  }
}

class UpdateTrackingBusinessPartner {
/*
{
  "id": 1,
  "name": "DPCARGO"
}
*/

  int? id;
  String? name;

  UpdateTrackingBusinessPartner({
    this.id,
    this.name,
  });
  UpdateTrackingBusinessPartner.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toInt();
    name = json['name']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['name'] = name;
    return data;
  }
}

class UpdateTrackingTrackingType {
/*
{
  "id": 7,
  "name": "BBW",
  "color": null
}
*/

  int? id;
  String? name;
  String? color;

  UpdateTrackingTrackingType({
    this.id,
    this.name,
    this.color,
  });
  UpdateTrackingTrackingType.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toInt();
    name = json['name']?.toString();
    color = json['color']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['name'] = name;
    data['color'] = color;
    return data;
  }
}

class UpdateTracking {
  int? id;
  String? code;
  UpdateTrackingTrackingType? trackingType;
  String? description;
  UpdateTrackingBusinessPartner? businessPartner;
  String? status;
  String? importDate;
  String? repackDate;
  String? packedDate;
  String? exportDate;
  String? arrivalDate;
  String? completedAt;
  String? exploitedDate;
  String? invoicedDate;
  String? checkingDate;
  bool? isRepack;
  UpdateTrackingBox? box;
  UpdateTrackingAwb? awb;
  UpdateTrackingWarehouse? warehouse;
  UpdateTrackingCustomer? customer;
  bool? isSplit;
  String? parentTracking;
  bool? isDeleted;
  String? imageUrl;
  String? note;
  String? exploitStatus;
  String? shippingFee;
  String? trackingMiningWeight;
  String? trackingCalculationWeight;
  String? trackingBarrelCoefficient;
  String? trackingShippingCost;
  String? trackingShippingFee;
  String? trackingSurcharge;
  String? trackingDeliveryFee;
  String? trackingOtherFee;
  int? trackingDiscountAmount;
  String? trackingTotalMoney;
  String? weight;
  UpdateTrackingDeliveryBill? deliveryBill;
  int? trackingAmount;
  String? orderId;
  UpdateTrackingWarehouseVn? warehouseVn;
  String? optionalImage;
  UpdateTrackingExploitedBy? exploitedBy;
  String? price;
  UpdateTrackingSale? sale;
  String? uid;
  String? createdAt;
  String? updatedAt;
  bool? isRenamed;
  String? ticketResponse;
  int? whTrackingId;
  String? vnPackedDate;
  String? vnImportDate;
  String? vnExportDate;
  String? vnPackedById;
  String? priority;
  String? productName;
  String? hasError;
  String? createdById;
  String? updatedById;

  UpdateTracking({
    this.id,
    this.code,
    this.trackingType,
    this.description,
    this.businessPartner,
    this.status,
    this.importDate,
    this.repackDate,
    this.packedDate,
    this.exportDate,
    this.arrivalDate,
    this.completedAt,
    this.exploitedDate,
    this.invoicedDate,
    this.checkingDate,
    this.isRepack,
    this.box,
    this.awb,
    this.warehouse,
    this.customer,
    this.isSplit,
    this.parentTracking,
    this.isDeleted,
    this.imageUrl,
    this.note,
    this.exploitStatus,
    this.shippingFee,
    this.trackingMiningWeight,
    this.trackingCalculationWeight,
    this.trackingBarrelCoefficient,
    this.trackingShippingCost,
    this.trackingShippingFee,
    this.trackingSurcharge,
    this.trackingDeliveryFee,
    this.trackingOtherFee,
    this.trackingDiscountAmount,
    this.trackingTotalMoney,
    this.weight,
    this.deliveryBill,
    this.trackingAmount,
    this.orderId,
    this.warehouseVn,
    this.optionalImage,
    this.exploitedBy,
    this.price,
    this.sale,
    this.uid,
    this.createdAt,
    this.updatedAt,
    this.isRenamed,
    this.ticketResponse,
    this.whTrackingId,
    this.vnPackedDate,
    this.vnImportDate,
    this.vnExportDate,
    this.vnPackedById,
    this.priority,
    this.productName,
    this.hasError,
    this.createdById,
    this.updatedById,
  });
  UpdateTracking.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toInt();
    code = json['code']?.toString();
    trackingType = (json['trackingType'] != null) ? UpdateTrackingTrackingType.fromJson(json['trackingType']) : null;
    description = json['description']?.toString();
    businessPartner = (json['businessPartner'] != null) ? UpdateTrackingBusinessPartner.fromJson(json['businessPartner']) : null;
    status = json['status']?.toString();
    importDate = json['importDate']?.toString();
    repackDate = json['repackDate']?.toString();
    packedDate = json['packedDate']?.toString();
    exportDate = json['exportDate']?.toString();
    arrivalDate = json['arrivalDate']?.toString();
    completedAt = json['completedAt']?.toString();
    exploitedDate = json['exploitedDate']?.toString();
    invoicedDate = json['invoicedDate']?.toString();
    checkingDate = json['checkingDate']?.toString();
    isRepack = json['isRepack'];
    box = (json['box'] != null) ? UpdateTrackingBox.fromJson(json['box']) : null;
    awb = (json['awb'] != null) ? UpdateTrackingAwb.fromJson(json['awb']) : null;
    warehouse = (json['warehouse'] != null) ? UpdateTrackingWarehouse.fromJson(json['warehouse']) : null;
    customer = (json['customer'] != null) ? UpdateTrackingCustomer.fromJson(json['customer']) : null;
    isSplit = json['isSplit'];
    parentTracking = json['parentTracking']?.toString();
    isDeleted = json['isDeleted'];
    imageUrl = json['imageUrl']?.toString();
    note = json['note']?.toString();
    exploitStatus = json['exploitStatus']?.toString();
    shippingFee = json['shippingFee']?.toString();
    trackingMiningWeight = json['trackingMiningWeight']?.toString();
    trackingCalculationWeight = json['trackingCalculationWeight']?.toString();
    trackingBarrelCoefficient = json['trackingBarrelCoefficient']?.toString();
    trackingShippingCost = json['trackingShippingCost']?.toString();
    trackingShippingFee = json['trackingShippingFee']?.toString();
    trackingSurcharge = json['trackingSurcharge']?.toString();
    trackingDeliveryFee = json['trackingDeliveryFee']?.toString();
    trackingOtherFee = json['trackingOtherFee']?.toString();
    trackingDiscountAmount = json['trackingDiscountAmount']?.toInt();
    trackingTotalMoney = json['trackingTotalMoney']?.toString();
    weight = json['weight']?.toString();
    deliveryBill = (json['deliveryBill'] != null) ? UpdateTrackingDeliveryBill.fromJson(json['deliveryBill']) : null;
    trackingAmount = json['trackingAmount']?.toInt();
    orderId = json['orderId']?.toString();
    warehouseVn = (json['warehouseVn'] != null) ? UpdateTrackingWarehouseVn.fromJson(json['warehouseVn']) : null;
    optionalImage = json['optionalImage']?.toString();
    exploitedBy = (json['exploitedBy'] != null) ? UpdateTrackingExploitedBy.fromJson(json['exploitedBy']) : null;
    price = json['price']?.toString();
    sale = (json['sale'] != null) ? UpdateTrackingSale.fromJson(json['sale']) : null;
    uid = json['uid']?.toString();
    createdAt = json['createdAt']?.toString();
    updatedAt = json['updatedAt']?.toString();
    isRenamed = json['isRenamed'];
    ticketResponse = json['ticketResponse']?.toString();
    whTrackingId = json['whTrackingId']?.toInt();
    vnPackedDate = json['vnPackedDate']?.toString();
    vnImportDate = json['vnImportDate']?.toString();
    vnExportDate = json['vnExportDate']?.toString();
    vnPackedById = json['vnPackedById']?.toString();
    priority = json['priority']?.toString();
    productName = json['productName']?.toString();
    hasError = json['hasError']?.toString();
    createdById = json['createdById']?.toString();
    updatedById = json['updatedById']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['code'] = code;
    if (trackingType != null) {
      data['trackingType'] = trackingType!.toJson();
    }
    data['description'] = description;
    if (businessPartner != null) {
      data['businessPartner'] = businessPartner!.toJson();
    }
    data['status'] = status;
    data['importDate'] = importDate;
    data['repackDate'] = repackDate;
    data['packedDate'] = packedDate;
    data['exportDate'] = exportDate;
    data['arrivalDate'] = arrivalDate;
    data['completedAt'] = completedAt;
    data['exploitedDate'] = exploitedDate;
    data['invoicedDate'] = invoicedDate;
    data['checkingDate'] = checkingDate;
    data['isRepack'] = isRepack;
    if (box != null) {
      data['box'] = box!.toJson();
    }
    if (awb != null) {
      data['awb'] = awb!.toJson();
    }
    if (warehouse != null) {
      data['warehouse'] = warehouse!.toJson();
    }
    if (customer != null) {
      data['customer'] = customer!.toJson();
    }
    data['isSplit'] = isSplit;
    data['parentTracking'] = parentTracking;
    data['isDeleted'] = isDeleted;
    data['imageUrl'] = imageUrl;
    data['note'] = note;
    data['exploitStatus'] = exploitStatus;
    data['shippingFee'] = shippingFee;
    data['trackingMiningWeight'] = trackingMiningWeight;
    data['trackingCalculationWeight'] = trackingCalculationWeight;
    data['trackingBarrelCoefficient'] = trackingBarrelCoefficient;
    data['trackingShippingCost'] = trackingShippingCost;
    data['trackingShippingFee'] = trackingShippingFee;
    data['trackingSurcharge'] = trackingSurcharge;
    data['trackingDeliveryFee'] = trackingDeliveryFee;
    data['trackingOtherFee'] = trackingOtherFee;
    data['trackingDiscountAmount'] = trackingDiscountAmount;
    data['trackingTotalMoney'] = trackingTotalMoney;
    data['weight'] = weight;
    if (deliveryBill != null) {
      data['deliveryBill'] = deliveryBill!.toJson();
    }
    data['trackingAmount'] = trackingAmount;
    data['orderId'] = orderId;
    if (warehouseVn != null) {
      data['warehouseVn'] = warehouseVn!.toJson();
    }
    data['optionalImage'] = optionalImage;
    if (exploitedBy != null) {
      data['exploitedBy'] = exploitedBy!.toJson();
    }
    data['price'] = price;
    if (sale != null) {
      data['sale'] = sale!.toJson();
    }
    data['uid'] = uid;
    data['createdAt'] = createdAt;
    data['updatedAt'] = updatedAt;
    data['isRenamed'] = isRenamed;
    data['ticketResponse'] = ticketResponse;
    data['whTrackingId'] = whTrackingId;
    data['vnPackedDate'] = vnPackedDate;
    data['vnImportDate'] = vnImportDate;
    data['vnExportDate'] = vnExportDate;
    data['vnPackedById'] = vnPackedById;
    data['priority'] = priority;
    data['productName'] = productName;
    data['hasError'] = hasError;
    data['createdById'] = createdById;
    data['updatedById'] = updatedById;
    return data;
  }
}
